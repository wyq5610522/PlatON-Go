language: go
go_import_path: github.com/PlatONnetwork/PlatON-Go
# sudo: false
matrix:
  include:
    # This builder compile PlatON at Ubuntu xenial
    - name: ubuntu compile
      os: linux
      dist: Bionic
      sudo: required
      addons:
        apt:
          packages:
          - llvm
          - g++
          - libgmp-dev
          - libssl-dev
      go: 1.12.x
      before_install:
        - pwd
        - ls
        - WORKSPACE=$(pwd)
        - git clone https://github.com/dfinity/bn
        - cd bn
        - make
        - sudo make install
        - export LD_LIBRARY_PATH=/lib:/usr/lib:/usr/local/lib
      script:
        - pwd
        - ls
        - cd ${WORKSPACE}
        - cat .travis.yml
        - chmod u+x ./build/*.sh
        - make platon
        - cd ./build/bin && ls
        - echo "test is a pr test!"

    # add a test!
    # This builder compile PlatON at Windows server 2016
    # - name: windows compile
    #   os: windows
    #   go: 1.12.x
    #   script:
    #     - chmod u+x ./build/*.sh
    #     - sh ./build/build_deps.sh
    #     - go run build/ci.go install

    # # This builder run the code scans uses gometalinter
    # - name: code scan
    #   os: linux
    #   dist: Bionic
    #   sudo: required
    #   go: 1.12.x
    #   script:
    #     - go get -v -u github.com/alecthomas/gometalinter
    #     - gometalinter --install --update
    #     - gometalinter --vendor --tests --deadline=10m --disable-all --enable=vet --enable=misspell --enable=goconst --min-occurrences=6 ./...

    # # This builder run the unit tests
    # - name: unit test
    #   os: linux
    #   dist: Bionic
    #   sudo: required
    #   go: 1.12.x
    #   script:
    #     - sh ./build/build_deps.sh
    #     - go test  -tags=test `go list ./... | grep -v swarm|grep -v tests|grep -v bn256`

    # # This builder run the auto tests
    # - if: type = push
    #   name: auto test
    #   os: linux
    #   dist: Bionic
    #   sudo: required
    #   go: 1.12.x
    #   before_install:
    #     - pyenv install -f 3.6.0
    #     - pyenv rehash
    #     - pyenv global 3.6.0
    #     - python --version
    #     - pip --version
    #   install:
    #     - chmod u+x ./build/*.sh
    #     - make all
    #   script:
    #     - WORKSPACE=$(pwd)
    #     - git clone https://github.com/PlatONnetwork/PlatON-Tests.git
    #     - cd ${WORKSPACE}/PlatON-Tests/deploy/node/
    #     - unzip -P ${UNZIP_CODE} travis_node.zip
    #     - cd ${WORKSPACE}/PlatON-Tests/
    #     - pip install --user -r requirements.txt
    #     - cp -f ${WORKSPACE}/build/bin/platon ${WORKSPACE}/PlatON-Tests/deploy/rely/bin/
    #     - python run.py --node ./deploy/node/travis_node.yml --module blockchain,transaction
